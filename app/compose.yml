version: '3.0'

services:
  jaeger:
    container_name: ${JAEGER_CONTAINER_NAME}
    hostname: ${JAEGER_CONTAINER_NAME}
    image: ${JAEGER_IMAGE}  
    networks:
      - bzn-network
    restart: always
    extra_hosts:
    - "host.docker.internal:host-gateway"  
    environment:
    - OTEL_ENABLED=true
    command: ["--config", "/etc/jaeger/config.yml"]
    ports:
      - "0.0.0.0:16686:16686"
      - "0.0.0.0:8888:8888"
      - "0.0.0.0:8889:8889"
      - "0.0.0.0:4317:4317" # OTLP gRPC
      - "0.0.0.0:4318:4318" # OTLP HTTP
    volumes:
      - "./jaeger/config.yaml:/etc/jaeger/config.yml"
      - "./jaeger/config-ui.json:/etc/jaeger/config-ui.json"
      #- "./jaeger/conf.yml:/etc/jaeger/config.yml"
  hotrod:
    container_name: ${JAEGER_EXEMPLO_CONTAINER_NAME}
    hostname: ${JAEGER_EXEMPLO_CONTAINER_NAME}
    image: ${JAEGER_EXEMPLO_IMAGE}  
    ports:
      - "8087:8080"
      - "8083:8083"
    command: ["all"]
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${JAEGER_EXEMPLO_HOST}
    networks:
      - bzn-network
    depends_on:
      - jaeger        
  prometheus:
    container_name: ${PROMETHEUS_CONTAINER_NAME}
    hostname: ${PROMETHEUS_CONTAINER_NAME}
    image: ${PROMETHEUS_IMAGE}  
    networks:
      - bzn-network
    restart: always
    volumes:
      - "./prometheus/conf.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
  grafana:
    container_name: ${GRAFANA_CONTAINER_NAME}
    hostname: ${GRAFANA_CONTAINER_NAME}
    image: ${GRAFANA_IMAGE}  
    networks:
      - bzn-network
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD} 
    depends_on:
      - prometheus
networks:
  bzn-network:
    external: true
volumes:
  vol-jaeger: {}     